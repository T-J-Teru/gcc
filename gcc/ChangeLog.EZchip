2016-02-02  Andrew Burgess  <andrew.burgess@embecosm.com>

	* common.opt (ffat-lto-objects): Make this flag default on.

2016-02-01  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/arc/arc.md (*loadqi_update): Replace use of 'rI'
	constraint with separate 'r' and 'Cm2' constraints.
	(*load_zeroextendqisi_update): Likewise.
	(*load_signextendqisi_update): Likewise.
	(*loadhi_update): Likewise.
	(*load_zeroextendhisi_update): Likewise.
	(*load_signextendhisi_update): Likewise.
	(*loadsi_update): Likewise.
	(*loadsf_update): Likewise.

2016-01-19  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/arc/arc.c (arc_print_operand): Print integer 'L' operands
	as 32-bits.

2016-01-08  Andrew Burgess  <andrew.burgess@embecosm.com>

	* config/arc/arc.opt (mdiv-rem): Add period to the end.
	(mcode-density): Likewise.

2014-06-27  Joern Rennecke  <joern.rennecke@embecosm.com>

	* reorg.c (reorg_set2live): New function.
	(reorg_redirect_jump): Use it.

2013-08-10  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config.gcc (arc*-ezchip-*-*) <tm_defines>: Comment out
	addition of BITOPS_DEFAULT=1 CMEM_DEFAULT=1.

2013-08-09  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.h (SYMBOL_FLAG_CMEM): Define.
	(CMEM_DEFAULT): Provide default definition.
	* c-family/c-common.c (handle_section_attribute): Don't set
	user_defined_section_attribute for VAR_DECL.
	* config.gcc (arc*-ezchip-elf) <tm_defines>: Add CMEM_DEFAULT=1.
	(arc*-ezchip-linux-uclibc) <tm_defines>: Likewise.
	* config/arc/arc.c (arc_address_cost): Return 0 for cmem_address.
	(arc_print_operand): Recognize 'C' code.
	(arc_encode_section_info): Set SYMBOL_FLAG_CMEM where indicated.
	* config/arc/arc.md (movsi_insn): Add r/Ucm,Ucm/c alternatives.
	* config/arc/arc.opt (mcmem): New option.
	* config/arc/constraints.md (Ucm): New define_constraint.
	* config/arc/predicates.md (long_immediate_loadstore_operand):
	Return 0 for MEM with cmem_address address.
	(cmem_address_0, cmem_address_1, cmem_address_2): New predicates.
	(cmem_address): Likewise.

	* config/arc/constraints.md (Usd, Us<, Us>): Use define_constraint.

2013-08-08  Joern Rennecke  <joern.rennecke@embecosm.com>

	* builtins.c (fold_builtin_constant_p): Consider addresses for
	global/static variables as constant when they are bound locally.

2013-03-11  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/t-ezchip: New file.
	config.gcc (arc-*-elf*, arc*-*-linux-uclibc*) <arc*-ezchip-*>:
	Add arc/t-ezchip to tmake_file.

2013-03-05  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/constraints.md (Chi): Make behaviour independent of
	HOST_WIDE_INT size.

2013-02-19  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config.gcc (arc-*-elf*, arc*-*-linux-uclibc*): Set BITOPS_DEFAULT=1
	for ezchip.
	* config/arc/arc.h (UNALIGNED_ACCESS_DEFAULT, BITOPS_DEFAULT):
	Provide default as 0.
	(STRICT_ALIGNMENT): Use unaligned_access.
	* config/arc/arc.opt (mbitops): Use BITOPS_DEFAULT.
	(munaligned-access): New option.

	* config/arc/constraints.md (Clo, Chi): New constraints.
	* config/arc/arc.md (movsi_insn): New alternatives w/Clo and w/Chi.

	* config/arc/constraints.md (Chs, Cbn): New constraints.
	* config/arc/arc.md (tst_movb_i, tst_bitfield_tst): New patterns.
	(tst_bitfield_asr, tst_bitfield): Likewise.
	(tst): Avoid recognition if it could prevent test_movb_i combination.
	Replace c/CnL with c/Chs alternative.

	* config/arc/arc.md (mrgb_i+1, mrgb_i+2): Remove constraints.

	* config/arc/arc.md (extzv): Now a define_expand.
	(extzv_i): New pattern.

2013-02-18  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.md (movb_i_high_signed+1): New combine-splitter
	pattern.

2013-02-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.md (mrgb, mrgb+1, mrgb+2): New patterns.

2013-02-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.c (arc_conditional_register_usage): Target
	TARGET_RRQ_CLASS into account.
	* config/arc/arc.h (TARGET_RRQ_CLASS): Define.
	* config/arc/arc.md (insv_i): Use Rrq, and w/C18/n/P constraints.
	(extzv): Use Rrq constraint.
	(movb_i): Likewise.
	(movb_i_signed, movb_i_high, mov_b_i_high_signed): Likewise.
	* config/arc/constraints.md (q): Make register class conditional.
	(Rrq): New register constraint.

2013-02-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.md (movb_i_signed, movb_i_high): New patterns.
	(movb_i_high_signed): Likewise.

2013-02-16  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.md (movsi_insn) <iw/Crr,w/Cbi>: Set type to shift.
	(extzv, insv_i): Likewise.
	(movb_i): New pattern.
	* config/arc/constraints.md: (Cbi): Fix 64 bit issue with 'signed'
	values.

2013-02-19  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.c (arc_print_operand) <'s'>): Strip off sign
	when calculating mask.

2013-02-15  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.c (arc_print_operand): Add directives 'p' and 's'.
	* config/arc/arc.h (IS_POWEROF2_OR_0_P): Define.
	* config/arc/arc.md (movsi_insn): Add w/Cbi alternative.
	(andsi3_i): Add w/c/Cbf alternative.
	(extzv, insv, insv_i): New patterns.
	* config/arc/arc.opt (TARGET_BITOPS): New option.
	* config/arc/constraints.md (Cbf, C18, Cbi): New constraints.

2013-01-29  Joern Rennecke  <joern.rennecke@embecosm.com>

	* config/arc/arc.h [1] (STRICT_ALIGNMENT): Define as 0.
	[1] (ROUND_TYPE_ALIGN): Define.
	* config/arc/arc-protos.h (arc_round_type_align): Declare.
	* config/arc/arc.c (arc_round_type_align): New function.
	(arc_expand_movmem): Take STRICT_ALIGNMENT into account.
